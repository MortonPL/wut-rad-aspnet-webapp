// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTR.Entities;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NTR.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20211214231200_0")]
    partial class _0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("NTR.Entities.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("text")
                        .HasColumnName("project_id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<int>("Budget")
                        .HasColumnType("integer")
                        .HasColumnName("budget");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<List<string>>("Subactivities")
                        .HasColumnType("text[]")
                        .HasColumnName("subactivities");

                    b.HasKey("ProjectId")
                        .HasName("pk_projects");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("NTR.Entities.UserActivity", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("text")
                        .HasColumnName("project_id");

                    b.Property<string>("ApprovalDate")
                        .HasColumnType("text")
                        .HasColumnName("approval_date");

                    b.Property<int>("ApprovedTime")
                        .HasColumnType("integer")
                        .HasColumnName("approved_time");

                    b.Property<string>("Date")
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ProjectId1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("project_id1");

                    b.Property<string>("Subactivity")
                        .HasColumnType("text")
                        .HasColumnName("subactivity");

                    b.Property<int>("Time")
                        .HasColumnType("integer")
                        .HasColumnName("time");

                    b.Property<string>("UserMonthId")
                        .HasColumnType("text")
                        .HasColumnName("user_month_id");

                    b.HasKey("ProjectId")
                        .HasName("pk_user_activities");

                    b.HasIndex("ProjectId1")
                        .HasDatabaseName("ix_user_activities_project_id1");

                    b.HasIndex("UserMonthId")
                        .HasDatabaseName("ix_user_activities_user_month_id");

                    b.ToTable("user_activities");
                });

            modelBuilder.Entity("NTR.Entities.UserMonth", b =>
                {
                    b.Property<string>("User")
                        .HasColumnType("text")
                        .HasColumnName("user");

                    b.Property<string>("Date")
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<bool>("Frozen")
                        .HasColumnType("boolean")
                        .HasColumnName("frozen");

                    b.HasKey("User")
                        .HasName("pk_user_months");

                    b.ToTable("user_months");
                });

            modelBuilder.Entity("NTR.Entities.UserActivity", b =>
                {
                    b.HasOne("NTR.Entities.Project", "Project")
                        .WithMany("UserActivities")
                        .HasForeignKey("ProjectId1")
                        .HasConstraintName("fk_user_activities_projects_project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NTR.Entities.UserMonth", "UserMonth")
                        .WithMany("UserActivities")
                        .HasForeignKey("UserMonthId")
                        .HasConstraintName("fk_user_activities_user_months_user_month_id");

                    b.Navigation("Project");

                    b.Navigation("UserMonth");
                });

            modelBuilder.Entity("NTR.Entities.Project", b =>
                {
                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("NTR.Entities.UserMonth", b =>
                {
                    b.Navigation("UserActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
